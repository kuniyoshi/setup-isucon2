
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$upstream_response_time"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  0;
    #keepalive_timeout  65;

    gzip  on;

    upstream app {
        server app1:5000;
        server app2:5000;
        keepalive 1000000;
    }

    upstream memcached {
        server 192.168.1.121:11211;
        keepalive 1000000;
    }

    proxy_cache_path /var/cache/nginx/static_file_cache levels=1:2 keys_zone=cache_static_file:128m inactive=7d max_size=512m;
    proxy_temp_path /var/cache/nginx/temp;

    server {
        listen       80;
        server_name  localhost;

       #charset koi8-r;

       #access_log  logs/host.access.log  main;

#       location / {
#          root   html;
#          index  index.html index.htm;
#       }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


	# location ~ ^/(css/|js/|images/|favicon.ico) {
	#    set $do_not_cache 0;
	#    proxy_no_cache $do_not_cache;
	#    proxy_cache_bypass $do_not_cache;
        #    proxy_cache cache_static_file;
	#    proxy_cache_key $scheme$host$uri$is_args$args;
	#    proxy_cache_valid 200 2h;
        #    proxy_cache_valid any 1m;

        #    # set $memcached_key $uri;
        #    # memcached_pass     memcached;
        #    # default_type       text/html;
        #    # error_page         404 = @static;
	# }

	# location @static {
	# 	root html;
	# }

	# location /css {
	# 	root html;
	# 	expires 30d;
	# }

	# location /js {
	# 	root html;
	# 	expires 30d;
	# }

	# location /images {
	# 	root html;
	# 	expires 30d;
	# }

	# location /favicon.ico {
	# 	root html;
	# 	expires 30d;
	# }

        location / {
           if ($request_method = POST) {
                proxy_pass http://app;
                break;
           }

           set $memcached_key $uri;
	   #memcached_pass     192.168.1.121:11211;
           memcached_pass     memcached;
           default_type       text/html;
           error_page         404 = @fallback;
        }
 
        location @fallback {
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header Host $http_host;
           proxy_pass http://app;

	     set $do_not_cache 0;
	     proxy_no_cache $do_not_cache;
	     proxy_cache_bypass $do_not_cache;
             proxy_cache cache_static_file;
	     proxy_cache_key $scheme$host$uri$is_args$args;
	     proxy_cache_valid 200 2h;
             proxy_cache_valid any 1m;


        }



        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
